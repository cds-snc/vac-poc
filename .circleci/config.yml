version: 2
jobs:
  build:
    docker:
      - image: cypress/base:10
    working_directory: ~/repo

    steps:
      # checkout branch
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run:
          name: "Jest tests"
          command: yarn test -w2
      - run:
          name: "Linting"
          command: yarn lint
      - run:
          name: "Cypress"
          command: yarn cypress:ci
      - run:
          name: "Report failing master"
          command: ~/repo/.circleci/notify_failure.sh
          when: on_fail

  deploy:
    docker:
      - image: docker:17.12.1-ce-git
    steps:
      - checkout:
          path: ~/repo
      - setup_remote_docker
      # Build the image
      - run:
          command: |
            docker build  -t "${DOCKER_REGISTRY}/${NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}" -t "${DOCKER_REGISTRY}/${NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:latest" --build-arg CIRCLE_SHA1="${CIRCLE_SHA1}" --build-arg SENTRY_DSN="${SENTRY_DSN}" --build-arg GA_UA="${GA_UA}" --build-arg GA_UA_CDS="${GA_UA_CDS}" --build-arg CIRCLE_PROJECT_REPONAME="${CIRCLE_PROJECT_REPONAME}" --build-arg CIRCLE_BRANCH="${CIRCLE_BRANCH}" --build-arg CIRCLE_REPOSITORY_URL="${CIRCLE_REPOSITORY_URL}" --build-arg WEBHOOK_URL="${WEBHOOK_URL}" --build-arg GOOGLE_MAPS_KEY="${GOOGLE_MAPS_KEY}" --build-arg AIRTABLE_READ_KEY="${AIRTABLE_READ_KEY}" .
          name: "Build Image"
      # Scan the image
      - run:
          command: |
            docker run -p 5432:5432 -d --name db arminc/clair-db:latest
            docker run -p 6060:6060 --link db:postgres -d --name clair arminc/clair-local-scan:v2.0.1
            docker run -v /var/run/docker.sock:/var/run/docker.sock -d --name clair-scanner cdssnc/clair-scanner:latest tail -f /dev/null
            clair_ip=`docker exec -it clair hostname -i | grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+'`
            scanner_ip=`docker exec -it clair-scanner hostname -i | grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+'`
            docker exec -it clair-scanner clair-scanner --ip ${scanner_ip} --clair=http://${clair_ip}:6060 -t High "${DOCKER_REGISTRY}/${NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}"
          name: "Scan image"
      # Deploy the image if passes the scan
      - run:
          command: |
            docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
            docker push "${DOCKER_REGISTRY}/${NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}"
            docker push "${DOCKER_REGISTRY}/${NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:latest"
          name: "Push Docker Image"
      - run:
          command: apt-get install curl && ~/repo/.circleci/notify_failure.sh
          name: "Report failing Master"
          when: on_fail

    working_directory: ~/repo

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
